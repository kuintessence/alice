[package]
name = "alice-infrastructure"
version = "0.1.0"
edition = "2021"

[dependencies]
actix-i18n = { workspace = true }
alice-architecture = { workspace = true, features = ["derive"] }
# error
anyhow = { workspace = true }
# async
tokio = { workspace = true, optional = true, features = ["rt-multi-thread"] }
flume = { workspace = true, optional = true }
async-trait = { workspace = true, optional = true }
futures-util = { workspace = true, optional = true }
# web
actix-http = { workspace = true }
actix-web = { workspace = true, optional = true }
url = { workspace = true, optional = true }
reqwest = { workspace = true, default-features = false, features = [
  "json",
  "rustls-tls",
], optional = true }
reqwest-middleware = { workspace = true, optional = true }
# log
tracing = { workspace = true, optional = true }
tracing-appender = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-log = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, features = [
  "tracing-log",
  "env-filter",
], optional = true }
opentelemetry = { workspace = true, features = ["rt-tokio"], optional = true }
opentelemetry-otlp = { workspace = true, optional = true }
log = { workspace = true }
# data
base64 = { workspace = true }
config = { workspace = true, features = ["yaml"] }
serde = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true, optional = true, features = ["serde"] }
# middlewares
rdkafka = { workspace = true, optional = true }
sea-orm = { workspace = true, optional = true, features = [
  "runtime-actix-rustls",
  "sqlx-postgres",
] }
jsonwebtoken = { workspace = true, optional = true }
# code
task-local-extensions = { workspace = true, optional = true }
thiserror = { workspace = true }
database-model = { workspace = true, optional = true }
[build-dependencies]
cmake = { workspace = true, optional = true }

[features]
actix-middleware = [
  "futures-util",
  "actix-web",
  "jsonwebtoken",
  "url",
  "reqwest",
  "error",
  "sea-orm-db",
  "database-model",
  "async-trait",
  "uuid",
]
reqwest-middleware = [
  "dep:reqwest-middleware",
  "reqwest",
  "task-local-extensions",
  "tokio/time",
  "tokio/macros",
  "async-trait",
]
kafka-mq = ["rdkafka/cmake-build", "cmake", "async-trait"]
flume-mq = ["flume", "async-trait", "tokio/rt"]
sea-orm-db = ["sea-orm"]
telemetry = [
  "tracing",
  "tracing-opentelemetry",
  "tracing-log",
  "tracing-subscriber",
  "opentelemetry",
  "opentelemetry-otlp",
  "tracing-appender",
]
event-system = ["uuid"]
error = ["actix-web"]
full = [
  "sea-orm-db",
  "kafka-mq",
  "actix-middleware",
  "telemetry",
  "flume-mq",
  "reqwest-middleware",
  "event-system",
  "error",
]
